# Generated by Django 5.2.4 on 2025-07-03 20:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('pricing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(help_text='Human-readable order number', max_length=100, unique=True)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('required_date', models.DateTimeField(blank=True, help_text='Date when order is required', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('fulfilled', 'Fulfilled'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('shipping_address', models.TextField(blank=True, help_text='Shipping address')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fulfilled_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('retailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='pricing.retailer')),
            ],
            options={
                'db_table': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='inventory.batch')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='analytics.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='inventory.product')),
            ],
            options={
                'db_table': 'order_items',
                'unique_together': {('order', 'product', 'batch')},
            },
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('snapshot_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(help_text='Inventory location', max_length=255)),
                ('snapshot_date', models.DateField(help_text='Date of the snapshot')),
                ('quantity_on_hand', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('value_on_hand', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('days_until_expiry', models.IntegerField(blank=True, help_text='Days until expiry for this batch', null=True)),
                ('turnover_rate', models.DecimalField(blank=True, decimal_places=4, help_text='Inventory turnover rate', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_snapshots', to='inventory.batch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_snapshots', to='inventory.product')),
            ],
            options={
                'db_table': 'inventory_snapshots',
                'ordering': ['-snapshot_date'],
                'unique_together': {('product', 'batch', 'location', 'snapshot_date')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('metric_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('sales_revenue', 'Sales Revenue'), ('sales_volume', 'Sales Volume'), ('inventory_turnover', 'Inventory Turnover'), ('profit_margin', 'Profit Margin'), ('customer_acquisition', 'Customer Acquisition'), ('order_fulfillment_rate', 'Order Fulfillment Rate'), ('waste_percentage', 'Waste Percentage'), ('alert_response_time', 'Alert Response Time')], max_length=30)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=15)),
                ('period_start', models.DateField(help_text='Start date of the period')),
                ('period_end', models.DateField(help_text='End date of the period')),
                ('value', models.DecimalField(decimal_places=4, help_text='Metric value', max_digits=15)),
                ('previous_value', models.DecimalField(blank=True, decimal_places=4, help_text='Previous period value for comparison', max_digits=15, null=True)),
                ('category', models.CharField(blank=True, help_text='Product category filter', max_length=100)),
                ('location', models.CharField(blank=True, help_text='Location filter', max_length=255)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='inventory.product')),
                ('retailer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='pricing.retailer')),
            ],
            options={
                'db_table': 'performance_metrics',
                'ordering': ['-period_start'],
                'unique_together': {('metric_type', 'period_type', 'period_start', 'product', 'retailer', 'category', 'location')},
            },
        ),
        migrations.CreateModel(
            name='SalesTransaction',
            fields=[
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_sku', models.CharField(help_text='Product SKU at time of sale', max_length=50)),
                ('product_name', models.CharField(help_text='Product name at time of sale', max_length=255)),
                ('product_category', models.CharField(help_text='Product category at time of sale', max_length=100)),
                ('batch_number', models.CharField(help_text='Batch number at time of sale', max_length=100)),
                ('production_date', models.DateField(help_text='Production date of the batch')),
                ('expiration_date', models.DateField(help_text='Expiration date of the batch')),
                ('retailer_name', models.CharField(help_text='Retailer name at time of sale', max_length=255)),
                ('retailer_city', models.CharField(help_text='Retailer city at time of sale', max_length=100)),
                ('retailer_state', models.CharField(help_text='Retailer state at time of sale', max_length=100)),
                ('quantity_sold', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('net_sales', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('gross_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('profit_margin', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sales_transaction', to='analytics.orderitem')),
            ],
            options={
                'db_table': 'sales_transactions',
                'ordering': ['-transaction_date'],
                'indexes': [models.Index(fields=['transaction_date'], name='sales_trans_transac_61b229_idx'), models.Index(fields=['product_sku', 'transaction_date'], name='sales_trans_product_6818c7_idx'), models.Index(fields=['retailer_name', 'transaction_date'], name='sales_trans_retaile_9b3a5c_idx')],
            },
        ),
    ]
