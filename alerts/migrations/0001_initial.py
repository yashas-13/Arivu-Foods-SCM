# Generated by Django 5.2.4 on 2025-07-03 20:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('pricing', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('alert_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('expiry_warning', 'Expiry Warning'), ('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('batch_expired', 'Batch Expired'), ('quality_issue', 'Quality Issue'), ('reorder_point', 'Reorder Point Reached'), ('custom', 'Custom Alert')], help_text='Type of alert', max_length=20)),
                ('title', models.CharField(help_text='Alert title', max_length=255)),
                ('message', models.TextField(help_text='Detailed alert message')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=15)),
                ('alert_data', models.JSONField(blank=True, default=dict, help_text='Additional alert data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='inventory.batch')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='inventory.product')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('retailer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='pricing.retailer')),
            ],
            options={
                'db_table': 'alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('generated', 'Alert Generated'), ('sent', 'Notification Sent'), ('failed', 'Notification Failed'), ('acknowledged', 'Alert Acknowledged'), ('resolved', 'Alert Resolved')], help_text='Type of log entry', max_length=15)),
                ('message', models.TextField(help_text='Log message')),
                ('notification_method', models.CharField(blank=True, choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='alerts.alert')),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'alert_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('rule_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rule_name', models.CharField(help_text='Name of the alert rule', max_length=255)),
                ('rule_type', models.CharField(choices=[('expiry_warning', 'Expiry Warning'), ('low_stock', 'Low Stock'), ('reorder_point', 'Reorder Point'), ('batch_expired', 'Batch Expired')], help_text='Type of alert rule', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the rule')),
                ('threshold_days', models.IntegerField(blank=True, help_text='Days threshold for expiry warnings', null=True)),
                ('threshold_quantity', models.DecimalField(blank=True, decimal_places=2, help_text='Quantity threshold for stock alerts', max_digits=10, null=True)),
                ('threshold_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage threshold for stock alerts', max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether rule is active')),
                ('check_frequency_hours', models.IntegerField(default=24, help_text='How often to check this rule (in hours)')),
                ('auto_resolve', models.BooleanField(default=False, help_text='Auto-resolve when condition is no longer met')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_checked_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(blank=True, help_text='Specific product for this rule', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='inventory.product')),
                ('retailer', models.ForeignKey(blank=True, help_text='Specific retailer for this rule', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='pricing.retailer')),
            ],
            options={
                'db_table': 'alert_rules',
                'ordering': ['rule_name'],
            },
        ),
        migrations.CreateModel(
            name='AlertSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('expiry_warning', 'Expiry Warning'), ('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('batch_expired', 'Batch Expired'), ('quality_issue', 'Quality Issue'), ('reorder_point', 'Reorder Point Reached'), ('custom', 'Custom Alert')], help_text='Type of alert to subscribe to', max_length=20)),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], help_text='How to receive notifications', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether subscription is active')),
                ('minimum_priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Minimum priority level to receive', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, help_text='Subscribe to alerts for specific product', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_subscriptions', to='inventory.product')),
                ('retailer', models.ForeignKey(blank=True, help_text='Subscribe to alerts for specific retailer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_subscriptions', to='pricing.retailer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'alert_subscriptions',
            },
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['alert_type', 'status'], name='alerts_alert_t_69ec1b_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['priority', 'created_at'], name='alerts_priorit_2ec1bf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='alertsubscription',
            unique_together={('user', 'alert_type', 'notification_method', 'product', 'retailer')},
        ),
    ]
